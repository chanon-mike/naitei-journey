"""relation id to uuid4

Revision ID: bc0627f3d016
Revises: 2a677768acf8
Create Date: 2023-08-05 19:11:28.644896

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "bc0627f3d016"
down_revision = "2a677768acf8"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("selection_flows")
    op.drop_table("application_statuses")
    op.drop_table("jobs")
    op.drop_table("categories")
    op.drop_index("ix_users_id", table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="users_pkey"),
        sa.UniqueConstraint("email", name="users_email_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("ix_users_id", "users", ["id"], unique=False)
    op.create_table(
        "selection_flows",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("job_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("process", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("step", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["job_id"], ["jobs.id"], name="selection_flows_job_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="selection_flows_pkey"),
    )
    op.create_table(
        "jobs",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("category_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("card_position", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("company_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("company_industry", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("occupation", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("ranking", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("is_internship", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "internship_duration", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "internship_start_date", sa.DATE(), autoincrement=False, nullable=True
        ),
        sa.Column("internship_end_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("url", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"], ["categories.id"], name="jobs_category_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="jobs_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "application_statuses",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("job_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("status", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("process", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("date", sa.DATE(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["job_id"], ["jobs.id"], name="application_statuses_job_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="application_statuses_pkey"),
    )
    op.create_table(
        "categories",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("type", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="categories_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="categories_pkey"),
    )
    # ### end Alembic commands ###
